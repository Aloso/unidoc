{"version":3,"sources":["webpack:///./src/index.js","webpack:///../unidok-js/pkg/unidok_bg.js","webpack:///./src/index.ts","webpack:///./src/playground.ts","webpack:///../unidok-js/pkg/unidok.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","addHeapObject","obj","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","compile","input_str","retrieve_spans","ptr0","len0","x","__wbindgen_object_drop_ref","arg0","__wbg_new_037a23de780123a1","Object","__wbindgen_number_new","__wbg_set_75b59f2badfc7c64","arg1","arg2","__wbindgen_string_new","__wbindgen_object_clone_ref","__wbg_new_515b65a8e7699d00","__wbg_push_b7f68478f81d358b","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_debug_string","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","__wbindgen_throw","content","contentLoading","openButton","rand","Math","floor","Date","this","openTab","button","classList","remove","add","title","innerText","document","search","getAttribute","window","location","history","replaceState","finishedLoading","setTimeout","innerHTML","fileName","fetch","then","response","status","text","statusText","convertToHtml","elems","getElementsByClassName","from","pre","HTMLElement","Playground","render","catch","e","getElementById","addEventListener","addBigPlayground","nav","buttons","navState","NavState","btn","tagName","children","isTabOpened","lastRenderTime","lastRenderValue","isHtml","changeListeners","renderListeners","value","textContent","replace","input","createElement","toggleButton","initToggleButton","editorView","initEditorView","preview","initPreview","newElem","to","style","setAttribute","id","applyAttributes","append","replaceWith","myKeymap","defaultKeymap","key","preventDefault","run","target","state","selection","main","empty","insertTab","indentMore","shift","indentLess","EditorView","EditorState","create","doc","extensions","lineWrapping","allowMultipleSelections","of","drawSelection","highlightActiveLine","highlightSelectionMatches","minSelectionLength","tabSize","updateListener","update","docChanged","getValue","forEach","listener","keymap","parent","toggleHtml","sliceString","now","performance","result","unidok","spans","warn","log","onChange","onRender","dont_wait","contains_math","updateHtmlWithMath","mathJax","MathJax","mathElems","getElementsByTagName","elem","converted","mathml2chtml","outerHTML","startup","clear","updateDocument","msg","body","overflow","oldValue","localStorage","getItem","playground","setItem","closeBtn","toolbar","close"],"mappings":"uFAAA,kBAEA,kB,8BCFA,mfAEA,MAAMA,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAIhC,SAASC,EAAUC,GAAO,OAAOL,EAAKK,GAFtCL,EAAKM,UAAKH,EAAW,MAAM,GAAM,GAIjC,IAAII,EAAYP,EAAKQ,OAQrB,SAASC,EAAWJ,GAChB,MAAMK,EAAMN,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVL,EAAKK,GAAOE,EACZA,EAAYF,GAKZM,CAAWN,GACJK,EAGX,SAASE,EAAcC,GACfN,IAAcP,EAAKQ,QAAQR,EAAKM,KAAKN,EAAKQ,OAAS,GACvD,MAAMH,EAAME,EAIZ,OAHAA,EAAYP,EAAKK,GAEjBL,EAAKK,GAAOQ,EACLR,EAKX,IAAIS,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIC,EAAOC,SAAS,QAAQF,YAAcA,aAE3D,QAAS,CAAEG,WAAW,EAAMC,OAAO,IAE5EL,EAAkBM,SAElB,IAAIC,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBE,SAAW,IAAYA,SAC7EF,EAAuB,IAAIG,WAAW,IAAYD,SAE/CF,EAGX,SAASI,EAAmBC,EAAKC,GAC7B,OAAOb,EAAkBM,OAAOE,IAAkBM,SAASF,EAAKA,EAAMC,IAoE1E,IAAIE,EAAkB,EAItB,IAAIC,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIf,EAAOC,SAAS,QAAQc,YAAcA,aAE3D,SAEzC,MAAMC,EAAwD,mBAAjCF,EAAkBG,WACzC,SAAUC,EAAKC,GACjB,OAAOL,EAAkBG,WAAWC,EAAKC,IAEvC,SAAUD,EAAKC,GACjB,MAAMC,EAAMN,EAAkBO,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACHG,KAAML,EAAI1B,OACVgC,QAASJ,EAAI5B,SAIrB,SAASiC,EAAkBP,EAAKQ,EAAQC,GAEpC,QAAgBxC,IAAZwC,EAAuB,CACvB,MAAMP,EAAMN,EAAkBO,OAAOH,GAC/BR,EAAMgB,EAAON,EAAI5B,QAGvB,OAFAc,IAAkBM,SAASF,EAAKA,EAAMU,EAAI5B,QAAQ8B,IAAIF,GACtDP,EAAkBO,EAAI5B,OACfkB,EAGX,IAAIC,EAAMO,EAAI1B,OACVkB,EAAMgB,EAAOf,GAEjB,MAAMiB,EAAMtB,IAEZ,IAAIuB,EAAS,EAEb,KAAOA,EAASlB,EAAKkB,IAAU,CAC3B,MAAMC,EAAOZ,EAAIa,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAIlB,EAAMmB,GAAUC,EAGxB,GAAID,IAAWlB,EAAK,CACD,IAAXkB,IACAX,EAAMA,EAAIc,MAAMH,IAEpBnB,EAAMiB,EAAQjB,EAAKC,EAAKA,EAAMkB,EAAsB,EAAbX,EAAI1B,QAC3C,MAAM2B,EAAOb,IAAkBM,SAASF,EAAMmB,EAAQnB,EAAMC,GAG5DkB,GAFYb,EAAaE,EAAKC,GAEhBK,QAIlB,OADAX,EAAkBgB,EACXnB,EAGX,IAAIuB,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqB1B,SAAW,IAAYA,SAC7E0B,EAAuB,IAAIE,WAAW,IAAY5B,SAE/C0B,EAYJ,SAASG,EAAQC,EAAWC,GAC/B,IAAIC,EAAOd,EAAkBY,EAAW,IAAwB,KAC5DG,EAAO3B,EAEX,OAAOpB,EADG,IAAa8C,EAAMC,EAXtBC,MAWuCH,EAAkB,SAAWA,EAAiB,EAAI,IAI7F,SAASI,EAA2BC,GACvClD,EAAWkD,GAGR,SAASC,IAEZ,OAAOhD,EADG,IAAIiD,QAIX,SAASC,EAAsBH,GAElC,OAAO/C,EADG+C,GAIP,SAASI,EAA2BJ,EAAMK,EAAMC,GACnD7D,EAAUuD,GAAMlD,EAAWuD,IAASvD,EAAWwD,GAG5C,SAASC,EAAsBP,EAAMK,GAExC,OAAOpD,EADGa,EAAmBkC,EAAMK,IAIhC,SAASG,EAA4BR,GAExC,OAAO/C,EADGR,EAAUuD,IAIjB,SAASS,IAEZ,OAAOxD,EADG,IAAIX,OAIX,SAASoE,EAA4BV,EAAMK,GAE9C,OADU5D,EAAUuD,GAAMrD,KAAKF,EAAU4D,IAItC,SAASM,IAEZ,OAAO1D,EADG,IAAI2D,OAIX,SAASC,EAA6Bb,EAAMK,GAC/C,IACIT,EAAOd,EADDrC,EAAU4D,GAAMS,MACQ,IAAwB,KACtDjB,EAAO3B,EACXqB,IAAkBS,EAAO,EAAI,GAAKH,EAClCN,IAAkBS,EAAO,EAAI,GAAKJ,EAG/B,SAASmB,EAA6Bf,EAAMK,GAC/C,IACIW,QAAQC,MAAMnD,EAAmBkC,EAAMK,IACzC,QACE,IAAqBL,EAAMK,IAI5B,SAASa,EAAwBlB,EAAMK,GAC1C,IACIT,EAAOd,EA/Mf,SAASqC,EAAYC,GAEjB,MAAMC,SAAcD,EACpB,GAAY,UAARC,GAA4B,WAARA,GAA4B,MAAPD,EACzC,MAAQ,GAAGA,EAEf,GAAY,UAARC,EACA,MAAO,IAAID,KAEf,GAAY,UAARC,EAAkB,CAClB,MAAMC,EAAcF,EAAIE,YACxB,OAAmB,MAAfA,EACO,SAEA,UAAUA,KAGzB,GAAY,YAARD,EAAoB,CACpB,MAAME,EAAOH,EAAIG,KACjB,MAAmB,iBAARA,GAAoBA,EAAK1E,OAAS,EAClC,YAAY0E,KAEZ,WAIf,GAAIjF,MAAMkF,QAAQJ,GAAM,CACpB,MAAMvE,EAASuE,EAAIvE,OACnB,IAAI4E,EAAQ,IACR5E,EAAS,IACT4E,GAASN,EAAYC,EAAI,KAE7B,IAAI,IAAIM,EAAI,EAAGA,EAAI7E,EAAQ6E,IACvBD,GAAS,KAAON,EAAYC,EAAIM,IAGpC,OADAD,GAAS,IACFA,EAGX,MAAME,EAAiB,sBAAsBC,KAAKC,SAASC,KAAKV,IAChE,IAAIW,EACJ,KAAIJ,EAAe9E,OAAS,GAIxB,OAAOgF,SAASC,KAAKV,GAEzB,GALIW,EAAYJ,EAAe,GAKd,UAAbI,EAIA,IACI,MAAO,UAAYC,KAAKC,UAAUb,GAAO,IAC3C,MAAOc,GACL,MAAO,SAIf,OAAId,aAAeR,MACR,GAAGQ,EAAIG,SAASH,EAAIe,YAAYf,EAAIN,QAGxCiB,EAgJGZ,CAAY1E,EAAU4D,IACE,IAAwB,KACtDR,EAAO3B,EACXqB,IAAkBS,EAAO,EAAI,GAAKH,EAClCN,IAAkBS,EAAO,EAAI,GAAKJ,EAG/B,SAASwC,EAAiBpC,EAAMK,GACnC,MAAM,IAAIO,MAAM9C,EAAmBkC,EAAMK,O,yLCvQ7C,WAEA,aAII,WACYgC,EACAC,GADA,KAAAD,UACA,KAAAC,iBALJ,KAAAC,WAAiC,KACjC,KAAAC,KAAOC,KAAKC,OAAO,IAAIC,KAAS,KA+D5C,OAxDI,sBAAI,0BAAW,C,IAAf,WACI,OAA0B,MAAnBC,KAAKL,Y,gCAGhB,YAAAM,QAAA,SAAQC,GAAR,WAC2B,MAAnBF,KAAKL,YACLK,KAAKL,WAAWQ,UAAUC,OAAO,QAErCJ,KAAKL,WAAaO,EAClBF,KAAKL,WAAWQ,UAAUE,IAAI,QAE9B,IAAMC,EAAQ,YAAYJ,EAAOK,UACjCC,SAASF,MAAQA,EAEjB,IAAMG,EAAS,IAAMP,EAAOQ,aAAa,YACrCD,IAAWE,OAAOC,SAASH,QAC3BI,QAAQC,aAAa,GAAIR,EAAOG,GAGpC,IAAIM,GAAkB,EACtBC,YAAW,WACFD,IACD,EAAKtB,QAAQwB,UAAY,EAAKvB,kBAEnC,KAEH,IAAMwB,EAAWhB,EAAOQ,aAAa,aACrCS,MAAM,cAAcD,EAAQ,IAAIlB,KAAKJ,MAChCwB,MAAK,SAAAC,GACF,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,OAGhB,MADAR,GAAkB,EACZ,IAAI/C,MAASqD,EAASC,OAAM,IAAID,EAASG,eAGtDJ,MAAK,SAAAG,G,MACF,EAAK9B,QAAQN,UAA2C,QAA/B,EAAAe,EAAOQ,aAAa,mBAAW,QAAI,GAC5D,EAAAe,cAAcF,EAAM,EAAK9B,SAAS,GAAM,GACxCsB,GAAkB,EAGlB,IADA,IAAMW,EAAQlB,SAASmB,uBAAuB,cAC5B,MAAAjI,MAAMkI,KAAKF,GAAX,eAAmB,CAAhC,IAAMG,EAAG,KACNA,aAAeC,aACf,IAAI,EAAAC,WAAWF,GAAKG,aAI/BC,OAAM,SAAAC,GACHnB,GAAkB,EAClB,EAAKtB,QAAQwB,UAAY,iHACIiB,EAAE3C,QAAO,uBAEtCnB,QAAQC,MAAM6D,OAG9B,EAjEA,GAmEA,kB,WACqE,QAA1C,EAAA1B,SAAS2B,eAAe,0BAAkB,QAAI,EAAA9D,MAAM,6BAC5D+D,iBAAiB,QAAS,EAAAC,kBASzC,IAPA,IAAM5C,EAA4C,QAAlC,EAAAe,SAAS2B,eAAe,kBAAU,QAAI,EAAA9D,MAAM,oBACtDqB,EAAiBD,EAAQwB,UAEzBqB,EAAyC,QAAnC,EAAA9B,SAAS2B,eAAe,mBAAW,QAAI,EAAA9D,MAAM,qBACnDkE,EAAU,GACVC,EAAW,IAAIC,EAAShD,EAASC,G,WAE5BgD,GACa,WAAhBA,EAAIC,SAAwBD,aAAeZ,cAC3CS,EAAQxI,KAAK2I,GACbA,EAAIN,iBAAiB,SAAS,WAC1BI,EAASvC,QAAQyC,MAEjB,IAAMA,EAAIhC,aAAa,cAAgBC,OAAOC,SAASH,QACvD+B,EAASvC,QAAQyC,KAPX,MAAAhJ,MAAMkI,KAAKU,EAAIM,UAAf,eAA0B,C,EAA9B,MAWTJ,EAASK,aACVL,EAASvC,QAAQsC,EAAQ,M,6IC5FjC,YACA,OACA,OACA,QACA,QAEA,aAeI,WAAYV,G,MAdJ,KAAAiB,eAAiB,EACjB,KAAAC,gBAAiC,KACjC,KAAAC,QAAS,EACT,KAAAC,gBAAkC,GAClC,KAAAC,gBAAkC,GAWtClD,KAAKmD,OAAwB,QAAf,EAAAtB,EAAIuB,mBAAW,QAAI,IAC5BC,QAAQ,MAAO,IACfA,QAAQ,YAAa,IAE1BrD,KAAKsD,MAAQ9C,SAAS+C,cAAc,OACpCvD,KAAKsD,MAAMnE,UAAY,QAEvBa,KAAKwD,aAAexD,KAAKyD,mBACzBzD,KAAK0D,WAAa1D,KAAK2D,iBACvB3D,KAAK4D,QAAU5D,KAAK6D,cAEpB,IAAMC,EAAUtD,SAAS+C,cAAc,OACvCO,EAAQ3E,UAAY,yBAyH5B,SAAyByC,EAAmBmC,GACxC,IAAMC,EAAQpC,EAAKlB,aAAa,SACnB,MAATsD,GACAD,EAAGE,aAAa,QAASD,GAE7B,IAAME,EAAKtC,EAAKsC,GACN,MAANA,IACAH,EAAGG,GAAKA,GA/HRC,CAAgBtC,EAAKiC,GACrBA,EAAQM,OAAOpE,KAAKsD,MAAOtD,KAAK4D,QAAS5D,KAAKwD,cAC9C3B,EAAIwC,YAAYP,GAoHxB,OAjHI,YAAAH,eAAA,sBAQUW,EAAW,EAAAC,cAAc9H,QAgB/B,OAfA6H,EAASvK,KAAK,CACVyK,IAAK,MACLC,gBAAgB,EAChBC,IAAA,SAAIC,GACA,OAAIA,EAAOC,MAAMC,UAAUC,KAAKC,MACrB,EAAAC,UAAUL,GAEV,EAAAM,WAAWN,IAG1BO,MAAA,SAAMP,GACF,OAAO,EAAAQ,WAAWR,MAInB,IAAI,EAAAS,WAAW,CAClBR,MAAO,EAAAS,YAAYC,OAAO,CACtBC,IAAKvF,KAAKmD,MACVqC,WAAY,CACR,EAAAJ,WAAWK,aACX,EAAAJ,YAAYK,wBAAwBC,IAAG,GACvC,EAAAC,gBACA,EAAAC,sBACA,EAAAC,0BAA0B,CAAEC,mBAAoB,IAChD,EAAAV,YAAYW,QAAQL,GAAG,GACvB,EAAAP,WAAWa,eAAeN,IAjCf,SAACO,GAChBA,EAAOC,aACP,EAAKhD,MAAQ,EAAKiD,WAClB,EAAKpE,SACL,EAAKiB,gBAAgBoD,SAAQ,SAAAC,GAAY,OAAAA,WA8BrC,EAAAC,OAAOZ,GAAGrB,MAGlBkC,OAAQxG,KAAKsD,SAIrB,YAAAO,YAAA,WACI,IAAMD,EAAUpD,SAAS+C,cAAc,OAEvC,OADAK,EAAQzE,UAAY,UACbyE,GAGX,YAAAH,iBAAA,sBACUD,EAAehD,SAAS+C,cAAc,UAI5C,OAHAC,EAAavC,UAAY,YACzBuC,EAAarE,UAAY,YACzBqE,EAAapB,iBAAiB,SAAS,WAAM,SAAKqE,gBAC3CjD,GAGX,YAAA4C,SAAA,WACI,OAAOpG,KAAK0D,WAAWkB,MAAMW,IAAImB,YAAY,IAGjD,YAAA1E,OAAA,sBACUmB,EAAQnD,KAAKmD,MAEbwD,EAAMC,YAAYD,MACxB,GAAIxD,IAAUnD,KAAK+C,gBACnB,GAAI4D,EAAM3G,KAAK8C,eAAiB,IAC5B9B,YAAW,WAAM,SAAKgB,WAAU,SADpC,CAKAhC,KAAK+C,gBAAkBI,EACvBnD,KAAK8C,eAAiB6D,EAGtB,IACI,GAAI3G,KAAKgD,OAAQ,CACb,IAAI6D,EAASC,EAAOjK,QAAQsG,GAC5BnD,KAAK4D,QAAQrD,UAAYsG,EAAOtF,KACxBsF,EAAOE,WAEPtF,EAAc0B,EAAOnD,KAAK4D,SAAS,GAAO,GAExD,MAAO1B,GACL9D,QAAQ4I,KAAK,UACb5I,QAAQ6I,IAAI9D,GACZ/E,QAAQC,MAAM6D,EAAE3C,SAChBS,KAAK4D,QAAQ3C,UAAY,4DAG7BjB,KAAKkD,gBAAgBmD,SAAQ,SAAAC,GAAY,OAAAA,SAG7C,YAAAG,WAAA,WACIzG,KAAKgD,QAAUhD,KAAKgD,OACpBhD,KAAK+C,gBAAkB,KACvB/C,KAAKgC,SAEDhC,KAAKgD,QACLhD,KAAKwD,aAAavC,UAAY,YAC9BjB,KAAK4D,QAAQzD,UAAUE,IAAI,UAE3BL,KAAKwD,aAAavC,UAAY,YAC9BjB,KAAK4D,QAAQzD,UAAUC,OAAO,UAItC,YAAA8G,SAAA,SAASZ,GACLtG,KAAKiD,gBAAgBlJ,KAAKuM,IAG9B,YAAAa,SAAA,SAASb,GACLtG,KAAKkD,gBAAgBnJ,KAAKuM,IAElC,EAnJA,GAgNA,SAAgB7E,EACZF,EACAoD,EACAyC,EACArK,GAEA,IAAM8J,EAASC,EAAOjK,QAAQ0E,EAAMxE,GAgBpC,OAdI8J,EAAOQ,cACHD,GACAzC,EAAO1D,UAAY4F,EAAOtF,KAC1B+F,EAAmB3C,IAEnB3D,YAAW,WACP2D,EAAO1D,UAAY4F,EAAOtF,KAC1B+F,EAAmB3C,KACpB,IAGPA,EAAO1D,UAAY4F,EAAOtF,KAGvBsF,EAAOE,MAGlB,SAASO,EAAmB3C,GACxB,GAAI,YAAahE,OAAQ,CAIrB,IAHA,IAAM4G,EAAW5G,OAAe6G,QAE1BC,EAAY9C,EAAO+C,qBAAqB,QAC3B,MAAAhO,MAAMkI,KAAK6F,GAAX,eAAuB,CAArC,IAAME,EAAI,KACLC,EAAYL,EAAQM,aAAaF,EAAKG,WAC5CH,EAAKtD,YAAYuD,GAGrBL,EAAQQ,QAAQvH,SAASwH,QACzBT,EAAQQ,QAAQvH,SAASyH,kBAejC,SAAgB5J,EAAM6J,GAClB,MAAM,IAAIlK,MAAMkK,GApQP,EAAAnG,aAgKb,8BACI,IAAMF,EAAMrB,SAAS+C,cAAc,OACnC1B,EAAI1C,UAAY,aAChB0C,EAAIqC,GAAK,iBACT1D,SAAS2H,KAAK/D,OAAOvC,GACrBrB,SAAS2H,KAAKnE,MAAMoE,SAAW,SAE/B,IAAMC,EAAWC,aAAaC,QAAQ,uBACtB,MAAZF,IACAxG,EAAIuB,YAAciF,GAGtB,IAAMG,EAAa,IAAIzG,EAAWF,GAClC2G,EAAWtB,UAAS,WAChBoB,aAAaG,QAAQ,sBAAuBD,EAAWrF,UAE3DqF,EAAWxG,SAEX,IAAM0G,EAAWlI,SAAS+C,cAAc,UACxCmF,EAASzH,UAAY,IACrByH,EAASpI,MAAQ,4BACjBoI,EAASxE,GAAK,uBAEd,IAAM5D,EAAQE,SAAS+C,cAAc,QACrCjD,EAAM4D,GAAK,uBACX5D,EAAMW,UAAY,oBAElB,IAAM0H,EAAUnI,SAAS+C,cAAc,OACvCoF,EAAQzE,GAAK,yBACbyE,EAAQvE,OAAO9D,EAAOoI,GACtBlI,SAAS2H,KAAK/D,OAAOuE,GAErB3H,YAAW,W,MACD8C,EAAmD,QAAzC,EAAAtD,SAAS2B,eAAe,yBAAiB,QAAI9D,EAAM,mBAOnE,SAASuK,IACL9E,EAAQ1D,SACRuI,EAAQvI,SACRI,SAAS2H,KAAKnE,MAAMoE,SAAW,GARnCtE,EAAQ1B,iBAAiB,WAAW,SAAAF,GACjB,WAAXA,EAAE3F,MAAmBqM,OAE7BF,EAAStG,iBAAiB,QAASwG,OAU3C,kBAmDA,W,6BCzQA","file":"2.bootstrap.js","sourcesContent":["import { main } from \"./index\"\n\nmain()\n","import * as wasm from './unidok_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* Returns a `CompileResult`.\n* @param {string} input_str\n* @param {boolean | undefined} retrieve_spans\n* @returns {any}\n*/\nexport function compile(input_str, retrieve_spans) {\n    var ptr0 = passStringToWasm0(input_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.compile(ptr0, len0, isLikeNone(retrieve_spans) ? 0xFFFFFF : retrieve_spans ? 1 : 0);\n    return takeObject(ret);\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbg_new_037a23de780123a1() {\n    var ret = new Object();\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_number_new(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_75b59f2badfc7c64(arg0, arg1, arg2) {\n    getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_515b65a8e7699d00() {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_push_b7f68478f81d358b(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nexport function __wbg_new_59cb74e423758ede() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_558ba5917b466edd(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","import { Playground, addBigPlayground, convertToHtml, error } from \"./playground\"\n\nclass NavState {\n    private openButton: HTMLElement | null = null\n    private rand = Math.floor(+new Date() / 60_000)\n\n    constructor(\n        private content: HTMLElement,\n        private contentLoading: string,\n    ) { }\n\n    get isTabOpened(): boolean {\n        return this.openButton != null\n    }\n\n    openTab(button: HTMLElement) {\n        if (this.openButton != null) {\n            this.openButton.classList.remove('open')\n        }\n        this.openButton = button\n        this.openButton.classList.add('open')\n\n        const title = `Unidok - ${button.innerText}`\n        document.title = title\n\n        const search = '?' + button.getAttribute('data-cls')\n        if (search !== window.location.search) {\n            history.replaceState({}, title, search)\n        }\n\n        let finishedLoading = false\n        setTimeout(() => {\n            if (!finishedLoading) {\n                this.content.innerHTML = this.contentLoading\n            }\n        }, 1000)\n\n        const fileName = button.getAttribute('data-file')\n        fetch(`./sections/${fileName}?${this.rand}`)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.text()\n                } else {\n                    finishedLoading = true\n                    throw new Error(`${response.status} ${response.statusText}`)\n                }\n            })\n            .then(text => {\n                this.content.className = button.getAttribute('data-cls') ?? ''\n                convertToHtml(text, this.content, true, false)\n                finishedLoading = true\n\n                const elems = document.getElementsByClassName('playground');\n                for (const pre of Array.from(elems)) {\n                    if (pre instanceof HTMLElement) {\n                        new Playground(pre).render()\n                    }\n                }\n            })\n            .catch(e => {\n                finishedLoading = true\n                this.content.innerHTML = `<div style=\"text-align: center; color: #ff7777; margin: 1.5em 0\">\n                Error loading the content: ${e.message}\n            </div>`\n                console.error(e)\n            })\n    }\n}\n\nexport function main() {\n    const openPlayground = document.getElementById('open-playground') ?? error('#open-playground is null')\n    openPlayground.addEventListener('click', addBigPlayground)\n\n    const content = document.getElementById('content') ?? error('#content is null')\n    const contentLoading = content.innerHTML\n\n    const nav = document.getElementById('main-nav') ?? error('#main-nav is null')\n    const buttons = []\n    const navState = new NavState(content, contentLoading)\n\n    for (const btn of Array.from(nav.children)) {\n        if (btn.tagName === 'BUTTON' && btn instanceof HTMLElement) {\n            buttons.push(btn)\n            btn.addEventListener('click', () => {\n                navState.openTab(btn)\n            })\n            if ('?' + btn.getAttribute('data-cls') === window.location.search) {\n                navState.openTab(btn)\n            }\n        }\n    }\n    if (!navState.isTabOpened) {\n        navState.openTab(buttons[0])\n    }\n}\n","import * as unidok from \"unidok\"\nimport { drawSelection, EditorView, highlightActiveLine, keymap, ViewUpdate } from \"@codemirror/view\"\nimport { EditorState } from \"@codemirror/state\"\nimport { defaultKeymap, indentLess, indentMore, insertTab } from \"@codemirror/commands\"\nimport { highlightSelectionMatches } from \"@codemirror/search\"\n\nexport class Playground {\n    private lastRenderTime = 0\n    private lastRenderValue: string | null = null\n    private isHtml = false\n    private changeListeners: (() => void)[] = []\n    private renderListeners: (() => void)[] = []\n\n    private input: HTMLDivElement\n    private preview: HTMLElement\n    private toggleButton: HTMLElement\n\n    private editorView: EditorView\n\n    public value: string\n\n    constructor(pre: HTMLElement) {\n        this.value = (pre.textContent ?? '')\n            .replace(/^\\n/, '')\n            .replace(/\\n[ \\t]*$/, '')\n\n        this.input = document.createElement('div')\n        this.input.className = 'input'\n\n        this.toggleButton = this.initToggleButton()\n        this.editorView = this.initEditorView()\n        this.preview = this.initPreview()\n\n        const newElem = document.createElement('div')\n        newElem.className = 'playground initialized'\n        applyAttributes(pre, newElem)\n        newElem.append(this.input, this.preview, this.toggleButton)\n        pre.replaceWith(newElem)\n    }\n\n    initEditorView(): EditorView {\n        const updateListener = (update: ViewUpdate) => {\n            if (update.docChanged) {\n                this.value = this.getValue()\n                this.render()\n                this.changeListeners.forEach(listener => listener())\n            }\n        }\n        const myKeymap = defaultKeymap.slice()\n        myKeymap.push({\n            key: 'Tab',\n            preventDefault: true,\n            run(target): boolean {\n                if (target.state.selection.main.empty) {\n                    return insertTab(target)\n                } else {\n                    return indentMore(target)\n                }\n            },\n            shift(target): boolean {\n                return indentLess(target)\n            }\n        })\n\n        return new EditorView({\n            state: EditorState.create({\n                doc: this.value,\n                extensions: [\n                    EditorView.lineWrapping,\n                    EditorState.allowMultipleSelections.of(true),\n                    drawSelection(),\n                    highlightActiveLine(),\n                    highlightSelectionMatches({ minSelectionLength: 3 }),\n                    EditorState.tabSize.of(4),\n                    EditorView.updateListener.of(updateListener),\n                    keymap.of(myKeymap),\n                ],\n            }),\n            parent: this.input,\n        })\n    }\n\n    initPreview(): HTMLElement {\n        const preview = document.createElement('div')\n        preview.className = 'preview'\n        return preview\n    }\n\n    initToggleButton(): HTMLButtonElement {\n        const toggleButton = document.createElement('button')\n        toggleButton.innerHTML = 'Show HTML'\n        toggleButton.className = 'show-html'\n        toggleButton.addEventListener('click', () => this.toggleHtml())\n        return toggleButton\n    }\n\n    getValue(): string {\n        return this.editorView.state.doc.sliceString(0)\n    }\n\n    render() {\n        const value = this.value\n\n        const now = performance.now()\n        if (value === this.lastRenderValue) return\n        if (now - this.lastRenderTime < 150) {\n            setTimeout(() => this.render(), 170)\n            return\n        }\n\n        this.lastRenderValue = value\n        this.lastRenderTime = now\n\n        let spans\n        try {\n            if (this.isHtml) {\n                let result = unidok.compile(value)\n                this.preview.innerText = result.text\n                spans = result.spans\n            } else {\n                spans = convertToHtml(value, this.preview, false, true)\n            }\n        } catch (e) {\n            console.warn('Input:')\n            console.log(value)\n            console.error(e.message)\n            this.preview.innerHTML = '<p style=\"color:#ff4444\"><strong>Fatal error</strong></p>'\n        }\n\n        this.renderListeners.forEach(listener => listener())\n    }\n\n    toggleHtml() {\n        this.isHtml = !this.isHtml\n        this.lastRenderValue = null\n        this.render()\n\n        if (this.isHtml) {\n            this.toggleButton.innerHTML = 'Hide HTML'\n            this.preview.classList.add('html')\n        } else {\n            this.toggleButton.innerHTML = 'Show HTML'\n            this.preview.classList.remove('html')\n        }\n    }\n\n    onChange(listener: () => void) {\n        this.changeListeners.push(listener)\n    }\n\n    onRender(listener: () => void) {\n        this.renderListeners.push(listener)\n    }\n}\n\nfunction applyAttributes(from: HTMLElement, to: HTMLElement) {\n    const style = from.getAttribute('style')\n    if (style != null) {\n        to.setAttribute('style', style)\n    }\n    const id = from.id\n    if (id != null) {\n        to.id = id\n    }\n}\n\nexport function addBigPlayground() {\n    const pre = document.createElement('pre')\n    pre.className = 'playground'\n    pre.id = 'big-playground'\n    document.body.append(pre)\n    document.body.style.overflow = 'hidden'\n\n    const oldValue = localStorage.getItem('big-playground-text')\n    if (oldValue != null) {\n        pre.textContent = oldValue\n    }\n\n    const playground = new Playground(pre)\n    playground.onChange(() => {\n        localStorage.setItem('big-playground-text', playground.value)\n    })\n    playground.render()\n\n    const closeBtn = document.createElement('button')\n    closeBtn.innerHTML = '✖'\n    closeBtn.title = 'Close playground (Escape)'\n    closeBtn.id = 'close-big-playground'\n\n    const title = document.createElement('span')\n    title.id = 'big-playground-title'\n    title.innerHTML = 'Unidok playground'\n\n    const toolbar = document.createElement('div')\n    toolbar.id = 'big-playground-toolbar'\n    toolbar.append(title, closeBtn)\n    document.body.append(toolbar)\n\n    setTimeout(() => {\n        const newElem = document.getElementById('big-playground') ?? error('newElem is null')\n\n        newElem.addEventListener('keydown', e => {\n            if (e.code === 'Escape') close()\n        })\n        closeBtn.addEventListener('click', close)\n\n        function close() {\n            newElem.remove()\n            toolbar.remove()\n            document.body.style.overflow = ''\n        }\n    })\n}\n\nexport function convertToHtml(\n    text: string,\n    target: HTMLElement,\n    dont_wait?: boolean,\n    retrieve_spans?: boolean\n): unidok.SyntaxSpan[] | void {\n    const result = unidok.compile(text, retrieve_spans)\n\n    if (result.contains_math) {\n        if (dont_wait) {\n            target.innerHTML = result.text\n            updateHtmlWithMath(target)\n        } else {\n            setTimeout(() => {\n                target.innerHTML = result.text\n                updateHtmlWithMath(target)\n            }, 20)\n        }\n    } else {\n        target.innerHTML = result.text\n    }\n\n    return result.spans\n}\n\nfunction updateHtmlWithMath(target: HTMLElement) {\n    if ('MathJax' in window) {\n        const mathJax = (window as any).MathJax as MathJax\n\n        const mathElems = target.getElementsByTagName('math')\n        for (const elem of Array.from(mathElems)) {\n            const converted = mathJax.mathml2chtml(elem.outerHTML)\n            elem.replaceWith(converted)\n        }\n\n        mathJax.startup.document.clear();\n        mathJax.startup.document.updateDocument()\n    }\n}\n\ninterface MathJax {\n    startup: {\n        document: {\n            updateDocument(): any,\n            clear(): any\n        }\n    }\n    mathml2chtml(mathml: string): string\n    mathml2chtmlPromise(mathml: string): Promise<string>\n}\n\nexport function error(msg: string): never {\n    throw new Error(msg)\n}\n\nconst _formattings = [\n    'InlineFormatting', 'Italic', 'Bold', 'Strikethrough', 'Superscript', 'Subscript', 'InlineCode',\n    'Heading', 'AtxHeading', 'SetextHeading1', 'SetextHeading2', 'AtxHeadingMarker', 'SetextHeadingMarker',\n    'Link', 'LinkText', 'LinkRef', 'LinkHref', 'LinkTitle', 'LinkRefDef',\n    'Image', 'ImageAltText', 'ImageHref', 'ImageTitle',\n    'Footnote',\n    'Blockquote', 'BlockquoteMarker',\n    'List', 'OrderedList', 'UnorderedList', 'ListMarker',\n    'ThematicBreak',\n    'CodeBlock', 'CodeFence', 'InfoString',\n    'Table', 'TableCell', 'TableCellMeta',\n    'Math', 'MathContent',\n    'Limiter',\n    'Comment',\n    'HtmlTag', 'HtmlTagName', 'HtmlAttrName', 'HtmlAttrValue',\n    'HtmlDoctype',\n    'HtmlCdata',\n    'HtmlComment',\n    'HtmlEntity',\n    'Macro', 'MacroName', 'MacroArg', 'MacroKey', 'MacroArgString', 'MacroArgList', 'CurlyBraces',\n    'Escaped'\n]\n","import * as wasm from \"./unidok_bg.wasm\";\nexport * from \"./unidok_bg.js\";"],"sourceRoot":""}